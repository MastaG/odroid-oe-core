diff -Naur a/chrome/common/chrome_paths.cc b/chrome/common/chrome_paths.cc
--- a/chrome/common/chrome_paths.cc	2021-10-29 05:07:12.000000000 +0200
+++ b/chrome/common/chrome_paths.cc	2021-11-16 22:35:41.152329602 +0100
@@ -327,6 +327,15 @@
 
 #if BUILDFLAG(ENABLE_WIDEVINE)
     case chrome::DIR_BUNDLED_WIDEVINE_CDM:
+      base::PathService::Get(base::DIR_HOME, &cur);
+      cur = cur.Append(FILE_PATH_LITERAL(".local/lib"))
+               .AppendASCII(kWidevineCdmBaseDirectory);
+      if (base::PathExists(cur))
+        break;
+      cur = base::FilePath(FILE_PATH_LITERAL("/opt"));
+      cur = cur.Append(kWidevineCdmBaseDirectory);
+      if (base::PathExists(cur))
+        break;
       if (!GetComponentDirectory(&cur))
         return false;
 #if !BUILDFLAG(IS_CHROMEOS_ASH)
diff -Naur a/third_party/widevine/cdm/widevine_cdm_version.h b/third_party/widevine/cdm/widevine_cdm_version.h
--- a/third_party/widevine/cdm/widevine_cdm_version.h	2021-10-29 05:07:46.000000000 +0200
+++ b/third_party/widevine/cdm/widevine_cdm_version.h	2021-11-16 22:35:41.152329602 +0100
@@ -11,5 +11,6 @@
 // If the Widevine CDM is available define the following:
 //  - WIDEVINE_CDM_VERSION_STRING (with the version of the CDM that's available
 //    as a string, e.g., "1.0.123.456").
+#define WIDEVINE_CDM_VERSION_STRING "undefined"
 
 #endif  // WIDEVINE_CDM_VERSION_H_
diff -Naur a/third_party/widevine/cdm/widevine.gni b/third_party/widevine/cdm/widevine.gni
--- a/third_party/widevine/cdm/widevine.gni	2021-10-29 05:07:46.000000000 +0200
+++ b/third_party/widevine/cdm/widevine.gni	2021-11-16 22:43:33.422515026 +0100
@@ -12,21 +12,21 @@
   # on Android and Fuchsia platforms.
   # Can be optionally enabled in Chromium on non-Android platforms. Please see
   # //src/third_party/widevine/LICENSE file for details.
-  enable_widevine = is_chrome_branded || is_android || is_fuchsia
+  enable_widevine = is_chrome_branded || is_android || is_fuchsia || is_linux || is_chromeos
 }
 
-# Disable Widevine when running linux-chromeos.
-if (is_chromeos && !is_chromeos_device) {
-  enable_widevine = false
+# Always enable Widevine for chromeOS
+if (is_chromeos) {
+  enable_widevine = true
 }
 
 # Widevine CDM is available as a library CDM on the following platforms and
 # architectures. Notably on Android library CDM is not used and Widevine is
 # supported via Android MediaDrm API.
 library_widevine_cdm_available =
-    (is_chromeos_ash && (target_cpu == "x64" || target_cpu == "arm")) ||
+    (is_chromeos_ash && (target_cpu == "x64" || target_cpu == "arm" || target_cpu == "arm64")) ||
     ((target_os == "linux" || is_chromeos_lacros) &&
-     (target_cpu == "x86" || target_cpu == "x64")) ||
+     (target_cpu == "x86" || target_cpu == "x64" || target_cpu == "arm" || target_cpu == "arm64")) ||
     (target_os == "mac" && (target_cpu == "x64" || target_cpu == "arm64")) ||
     (target_os == "win" && (target_cpu == "x86" || target_cpu == "x64"))
 
@@ -42,7 +42,7 @@
 # Note: Not enabled on ChromeOS. See https://crbug.com/971433
 enable_widevine_cdm_component =
     enable_library_widevine_cdm &&
-    (is_win || is_mac || is_linux || is_chromeos_lacros)
+    (is_win || is_mac || is_linux || is_chromeos_lacros || is_chromeos)
 
 # Enable (Windows) Media Foundation Widevine CDM component.
 declare_args() {
